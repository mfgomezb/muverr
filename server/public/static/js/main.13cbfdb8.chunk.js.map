{"version":3,"sources":["components/auth/AuthService.js","components/main/Navbar.js","components/main/Home.jsx","components/UserService.js","components/TransactionService.js","components/transactions/Chat/index.js","components/transactions/Chat/Chat.jsx","components/main/Profile.jsx","components/main/EditProfile.jsx","components/auth/Signup.js","components/auth/Login.js","components/transactions/Transactions.jsx","components/transactions/TransactionDetails.jsx","components/transactions/CreateTransaction.jsx","components/transactions/CheckoutForm.jsx","components/transactions/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["require","config","AuthService","_this","this","Object","classCallCheck","signup","username","password","email","country","city","street","area_code","photo","console","log","formData","FormData","append","service","post","headers","Content-Type","then","response","data","login","loggedin","get","logout","payment","token","fetch","concat","process","method","body","id","axios","create","baseURL","withCredentials","Navbar","props","possibleConstructorReturn","getPrototypeOf","call","handleLogout","e","state","loggedInUser","nextProps","setState","objectSpread","_this2","react_default","a","createElement","AppBar_default","className","position","Toolbar_default","Button_default","Link","to","onClick","Component","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","Home","ComponentService","getUser","editUser","_ref","name","patch","addOperation","buyer","_ref2","operations","openTransactions","createTransaction","seller","amount","rate","currency","bolivares","beneficiaryName","beneficiaryBank","beneficiaryNationalId","beneficiaryBankAccount","getTransaction","editTransaction","classification","payTransaction","confirmTransaction","_ref3","cancelBuyOrder","_ref4","buyerId","operId","cancelSellOrder","_ref5","sellerId","deleteTransaction","delete","Chat","_React$Component","messages","input","color","onDelete","avatar","icon","variant","match","room","params","transactionId","inherits","createClass","key","value","socket","io","emit","on","conversation","msg","receiveMessage","toConsumableArray","message","timestamp","Date","now","userId","userInSession","_id","_this3","_this$state","Paper_default","map","i","Chip_default","label","avatarToPlayground","iconToPlayground","TextField_default","fullWidth","placeholder","margin","onChange","currentTarget","onKeyDown","keyCode","submitChat","React","Profile","user","loggedUser","componentDidMount","componentWillReceiveProps","transactionService","catch","error","paymentRedirect","Redirect","confirmPayment","profile","UserService","details","esm_extends","classes","operation","buys","sells","filter","oper","buyTable","Typography_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","buy","component","scope","numeric","size","chat","ratePayment","sellTable","sell","Card_default","CardContent_default","title","gutterBottom","pos","created_at","toDateString","CardActions_default","fontSize","marginBottom","EditProfile","handleFormSubmit","event","preventDefault","redirectToProfile","updateUser","handleChange","_event$target","target","_user","noValidate","autoComplete","onSubmit","classNames","textField","inputLabelShrink","InputLabelProps","shrink","InputProps","readOnly","type","theme","width","flexBasis","Signup","files","defineProperty","Login","setRedirect","redirectToHome","renderRedirect","redirectHome","class","desc","b","orderBy","rows","disablePadding","EnhancedTableHead","createSortHandler","property","onRequestSort","_this$props","order","row","padding","sortDirection","Tooltip_default","placement","enterDelay","TableSortLabel_default","active","direction","EnhancedTableToolbar","spacer","paddingRight","spacing","unit","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","actions","Transactions","handleRequestSort","handleSelectAllClick","checked","selected","n","handleClick","selectedIndex","indexOf","newSelected","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","isSelected","TransactionService","_this4","_this5","emptyRows","Math","min","Transactions_EnhancedTableToolbar","numSelected","tableWrapper","aria-labelledby","Transactions_EnhancedTableHead","onSelectAllClick","rowCount","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","hover","tabIndex","rating","moment","format","style","height","colSpan","TablePagination_default","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","marginTop","minWidth","overflowX","TransactionDetails","transaction","changeStatusToInProcess","card","CreateTransaction","deal","parseInt","capitalizeFirstLetter","string","charAt","toUpperCase","_deal","calcTotal","handleCurrencyChange","currencies","_","val","numberInput","replace","button","display","CheckoutForm","txservice","txId","changeStatusToInPaid","complete","submit","bind","assertThisInitialized","ev","stripe","createToken","ok","Grid_default","container","item","xs","md","required","es","injectStripe","Checkout","apiKey","transactions_CheckoutForm","App","getTheUser","userObj","err","fetchUser","main_Navbar","Route","exact","path","render","main_Home","main_Profile","main_EditProfile","transactions_Transactions","transactions_CreateTransaction","transactions_TransactionDetails","transactions_Checkout","transactions_Chat_Chat","Switch","auth_Signup","auth_Login","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.13cbfdb8.chunk.js","sourcesContent":["// auth/auth-service.js\nimport axios from 'axios';\nrequire('dotenv').config();\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password, email, country, city, street, area_code, photo) => {\n    console.log(photo)\n    const formData = new FormData();\n    formData.append('username', username)\n    formData.append('password', password)\n    formData.append('email', email)\n    formData.append('country', country)\n    formData.append('city', city)\n    formData.append('street', street)\n    formData.append('area_code', area_code)\n    formData.append('photo', photo)\n    return this.service.post('/signup', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      }})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n\n  payment = (token) => {\n    console.log(token)\n    return fetch(`${process.env.REACT_APP_API_URL}/api/auth/charge`, {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"text/plain\"},\n      body: token.id\n    })\n    .then(response => response)\n  }\n}\n\n\nexport default AuthService;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../auth/AuthService';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] })\n  }\n\n  handleLogout = (e) => {\n    this.props.logout()\n  }\n\n\n  render() {\n\n\n\n    if (this.state.loggedInUser) {\n      return (\n        <div >\n          <AppBar className='navbar' position=\"static\">\n            <Toolbar>\n              <Button className='navbar'><Link className='link-style link-color' to='/'><b>MUVERR</b></Link></Button>\n              <Button><Link className='link-style link-color' to='/transactions'>Market</Link></Button>\n              <Button><Link className='link-style link-color' to='/sendmoney'>Send Money</Link></Button>\n              <Button><Link className='link-style link-color' to='/profile'>Dashboard</Link></Button>\n              <Button><Link className='link-style link-color' to='/' onClick={e => this.handleLogout(e)}>Logout</Link></Button>\n            </Toolbar>\n          </AppBar>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Button className='navbar'><Link className='link-style link-color' to='/'><b>MUVERR</b></Link></Button>\n              <Button><Link className='link-style link-color' to='/signup'>Signup</Link></Button>\n              <Button><Link className='link-style link-color' to='/login'>Login</Link></Button>\n            </Toolbar>\n          </AppBar>\n        </div>\n      )\n    }\n  }\n}\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Navbar);\n","import React, {Component} from 'react'\nimport '../../stylesheets/style.scss'\n\n\nclass Home extends Component {\n  render() {\n    return (\n        <div className='index-content'>\n            <h1>MUVERR</h1>\n            <div className='title1'><b>Send money to your family</b></div>\n            <div className='title2'><b>Protect your work and savings</b></div>\n        </div>\n    )\n  }\n}\n\n\nexport default Home\n\n\n","// auth/auth-service.js\n\nimport axios from 'axios';\nrequire('dotenv').config();\n\nclass ComponentService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/user`,\n      withCredentials: true\n    });\n  }\n\n  getUser = (id) => {\n    return this.service.get(`/profile/${id}`,)\n    .then(response => response.data)\n  }\n\n  editUser = (id, {username, name, email, country, city, street, area_code}) => {\n    return this.service.patch(`/${id}`, {username, name, email, country, city, street, area_code})\n    .then(response => response.data)\n  }\n  addOperation = (buyer, {operations}) => {\n    return this.service.post(`/addOper/${buyer}`, {operations})\n    .then(response => response.data)\n  }\n\n}\n\nexport default ComponentService;\n\n","\nimport axios from 'axios';\nrequire('dotenv').config();\n\nclass ComponentService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/transactions`,\n      withCredentials: true\n    });\n  }\n\n  openTransactions = () => {\n    return this.service.get('/open', )\n      .then(response => response.data)\n  }\n\n  createTransaction = (seller, amount, rate, currency, bolivares, beneficiaryName, beneficiaryBank, beneficiaryNationalId, beneficiaryBankAccount) => {\n    return this.service.post('/createtransaction/', {\n      seller,\n      amount,\n      rate,\n      currency,\n      bolivares,\n      beneficiaryName,\n      beneficiaryBank,\n      beneficiaryNationalId,\n      beneficiaryBankAccount\n      })\n      .then(response => response.data)\n  }\n\n  getTransaction = (id) => {\n    return this.service.get(`/transaction/${id}`, )\n      .then(response => response.data)\n  }\n\n  editTransaction = (id, {buyer , classification}) => {\n    return this.service.patch(`/transaction/${id}`, { buyer, classification })\n      .then(response => response.data)\n  }\n\n  payTransaction = (id, {classification}) => {\n    console.log(classification)\n    return this.service.patch(`/transactionpaid/${id}`, {classification})\n      .then(response => response.data)\n  }\n\n  confirmTransaction = (id, {classification}) => {\n    console.log(classification)\n    return this.service.patch(`/transactionconfirmed/${id}`, {classification})\n      .then(response => response.data)\n  }\n\n\n  cancelBuyOrder = ({buyerId, operId}) => {\n    return this.service.patch(`/cancelbuyorder/`, {buyerId, operId})\n      .then(response => response.data)\n  }\n\n  cancelSellOrder = ({sellerId, operId}) => {\n    return this.service.patch(`/cancelsellorder/`, {sellerId, operId})\n      .then(response => response.data)\n  }\n\n  deleteTransaction = (id) => {\n    return this.service.delete(`/${id}`, )\n      .then(response => response.data)\n  }\n\n}\n\nexport default ComponentService;","import {Chat as x} from './Chat.jsx';\n\nexport const Chat = x;","import React from 'react';\nimport io from 'socket.io-client';\nimport '../../../stylesheets/style.scss';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\n\n\n\nexport  class Chat extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            messages:[],\n            input:'',\n            color: 'default',\n            onDelete: 'none',\n            avatar: 'icon',\n            icon: 'none',\n            variant: 'default',\n        }\n\n        this.match = props.match\n        this.props = props\n        this.room = this.match.params.transactionId\n\n    }\n\n    componentDidMount(){\n\n        this.socket = io(`${process.env.REACT_APP_API_URL}` ); //  + this.match.params.transactionId\n\n        this.socket.emit('subscribe', this.room)\n        \n        this.socket.on('output', (data) => {\n            console.log(data)\n            this.setState({messages: data.conversation})\n        });\n\n        this.socket.on('conversation private post', (msg)=> {\n            console.log(msg)\n            this.receiveMessage(msg);\n        });   \n    }\n\n    receiveMessage(msg){\n        this.setState({\n            input:'',\n            messages: [...this.state.messages, msg]\n        })\n    }\n\n    submitChat(){\n        let msg = this.state.input;\n\n        this.setState({\n            input:'',\n            messages: [...this.state.messages, {\n                message: msg, \n                room: this.room,\n                timestamp:Date.now(),\n                userId: this.props.userInSession._id}]\n        });\n        console.log(this.state.messages)\n\n        this.socket.emit('send message',{\n            message: msg, \n            room: this.room,\n            timestamp:Date.now(),\n            userId: this.props.userInSession._id\n        })        \n    }\n    \n    render(){\n        let {messages, input} = this.state;\n        return (\n            <div className='chat-holder'>\n                <Paper className=\"chat-window\"  >\n                    <div className=\"msg\">\n                        {messages.map( (e,i) => \n                        <div className={(e.userId === this.props.userInSession._id) ? \"msg me\" : \"msg server\"} key={i}>\n                            <Chip\n                            label={e.message}\n                            color={(e.userId === this.props.userInSession._id) ? \"primary\" : \"default\"}\n                            avatar={this.state.avatarToPlayground}\n                            icon={this.state.iconToPlayground}\n                            variant={this.state.variant}\n                            />\n                        </div> \n                        )}\n                    </div>      \n                </Paper>\n                <TextField\n                    id=\"standard-bare\"\n                    className='textField'\n                    fullWidth\n                    placeholder='Type your message here'\n                    value={input}\n                    margin=\"normal\"\n                    onChange={e => this.setState({input:e.currentTarget.value})} onKeyDown={e => e.keyCode==13 ? this.submitChat():null}\n                />\n            </div>\n            \n            )\n    }\n}","import React, {Component} from 'react'\nimport UserService from '../UserService'\nimport ComponentService from '../TransactionService'\nimport {Link} from 'react-router-dom'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {Redirect} from 'react-router-dom'\nimport '../../stylesheets/style.scss'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Chat from '../transactions/Chat';\n\n\nconst styles = {\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n};\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            profile: true,\n  \n        };\n        \n        this.service = new UserService()\n        this.transactionService = new ComponentService()\n      }\n\n      getUser = id => {\n        this.service.getUser(id).then( user => {\n          let loggedUser = user[0];\n          this.setState({ user: loggedUser});\n        });\n      };\n    \n      componentDidMount = () => {\n        return this.getUser(this.props.userInSession._id);\n      };\n\n      componentWillReceiveProps = () => {\n        return this.getUser(this.props.userInSession._id);\n      };\n\n      cancelBuyOrder = (buyerId, operId) => {\n        this.transactionService.cancelBuyOrder({buyerId, operId})\n        .then( () => {\n          this.getUser(this.props.userInSession._id);\n        })\n        .catch( error => console.log(error) )\n      }\n\n      cancelSellOrder = (sellerId, operId) => {\n        this.transactionService.cancelSellOrder({sellerId, operId})\n        .then( () => {\n          this.getUser(this.props.userInSession._id);\n        })\n        .catch( error => console.log(error) )\n      }\n\n      paymentRedirect = (id) => {\n        console.log(id)\n        return <Redirect to={`/checkout/+${id}`}/>\n      }\n\n      confirmPayment = (id) => {\n        const classification = \"CONFIRMED\"\n        this.transactionService.confirmTransaction(id, {classification})\n        .then( () => {\n          this.getUser(this.props.userInSession._id);\n        })\n        .catch( error => console.log(error) )\n      }\n    \n\n    render() {\n      \n      if (this.state.user === null) {\n        this.getUser(this.props.userInSession._id)\n      } \n\n      let {...details} = this.state.user\n      const {classes} = this.props\n      let operation = details.operations\n\n      let buys =[];\n      let sells = []\n      \n      if (this.state.user && operation){\n        console.log(operation)\n        buys = operation.filter(oper => oper.seller._id !== this.props.userInSession._id)\n        sells = operation.filter(oper => oper.seller._id === this.props.userInSession._id)\n      }\n\n      \n\n      const buyTable = (buys) => {\n        return (\n          <Paper className={classes.root}>\n          <Toolbar><Typography  variant=\"h6\" id=\"tableTitle\"> Buy Operations</Typography></Toolbar>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Bolivares</TableCell>\n                  <TableCell>Beneficiary Bank</TableCell>\n                  <TableCell>Seller</TableCell>\n                  <TableCell>Chat</TableCell>\n                  <TableCell>Pay</TableCell>\n                  <TableCell>Confirmation Status</TableCell>\n                  <TableCell>Rate Tx</TableCell>\n                  <TableCell>Cancel</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {buys.map(buy => {\n                  return (\n                    <TableRow key={buy._id}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {buy.amount}\n                      </TableCell>\n                      <TableCell numeric>{buy.rate}</TableCell>\n                      <TableCell numeric>{buy.bolivares}</TableCell>\n                      <TableCell numeric>{buy.beneficiaryBank}</TableCell>\n                      <TableCell numeric>{buy.seller.username}</TableCell>\n                      <TableCell>{(buy.classification !== \"OPEN\") ? <Button color=\"primary\" size=\"medium\" onClick={(e) => this.chat(buy._id)}><Link className='link-style' to={\"/transactionChat/\" + buy._id}> Chat </Link></Button> : null}</TableCell>\n                      <TableCell>{(buy.classification === 'IN PROCESS') ? <Button color=\"primary\" size=\"medium\"><Link className='link-style' to={\"/checkout/\" + buy._id}> Pay </Link></Button> : null}</TableCell>\n                      <TableCell>{(buy.classification === 'PAID') ? <Button color=\"primary\" size=\"medium\"> Waiting for Confirmation </Button> : null}</TableCell>\n                      <TableCell>{(buy.classification === 'CONFIRMED') ?  <Button color=\"primary\" size=\"medium\" onClick={(e) => this.ratePayment(e)}> Rate </Button> : null}</TableCell>\n                      <TableCell>{((buy.classification === 'IN PROCESS') || (buy.classification === 'OPEN')) ? <Button color=\"primary\" size=\"medium\" onClick={(e) => this.cancelBuyOrder(this.props.userInSession._id, buy.id)}>Cancel Order</Button> : null}</TableCell>\n\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Paper>\n        );\n      }\n\n      const sellTable = (sells) => {\n        return (\n          <Paper className={classes.root}>\n          <Toolbar><Typography  variant=\"h6\" id=\"tableTitle\"> Sell Operations</Typography></Toolbar>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Bolivares</TableCell>\n                  <TableCell>Beneficiary Bank</TableCell>\n                  <TableCell>Seller</TableCell>\n                  <TableCell>Chat</TableCell>\n                  <TableCell>Confirm Payment</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Cancel</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {sells.map(sell => {\n                  return (\n                    <TableRow key={sell._id}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {sell.amount}\n                      </TableCell>\n                      <TableCell numeric>{sell.rate}</TableCell>\n                      <TableCell numeric>{sell.bolivares}</TableCell>\n                      <TableCell numeric>{sell.beneficiaryBank}</TableCell>\n                      <TableCell numeric>{sell.seller.username}</TableCell>\n                      <TableCell>{(sell.classification !== \"OPEN\") ? <Button color=\"primary\" size=\"medium\" onClick={(e) => this.chat(sell._id)}><Link className='link-style' to={\"/transactionChat/\" + sell._id}> Chat </Link></Button> : null}</TableCell>\n                      <TableCell>{(sell.classification === 'PAID') ? <Button color=\"primary\" size=\"medium\" onClick={(e) => this.confirmPayment(sell._id)}> Confirm Payment </Button> : null}</TableCell>\n                      <TableCell>{(sell.classification === 'CONFIRMED') ?  <Button color=\"primary\" size=\"medium\" onClick={(e) => this.ratePayment(e)}> Rate </Button> : null}</TableCell>\n                      <TableCell>{((sell.classification === 'IN PROCESS') || (sell.classification === 'OPEN')) ? <Button color=\"primary\" size=\"medium\" onClick={(e) => this.cancelSellOrder(this.props.userInSession._id, sell.id)}>Cancel Order</Button> : null}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Paper>\n        );\n      }\n\n      const profileBox = () => {\n        return (\n          <Card className='card-style'>\n            <CardContent>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n              {details.name}\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n              {details.username}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n              {details.email}\n              </Typography>\n              <Typography component=\"p\">\n              {details.country}\n              </Typography>\n              <Typography component=\"p\">\n              {(new Date(details.created_at)).toDateString()}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button><Link to={\"/user/edit/\"}>Edit</Link></Button>\n            </CardActions>\n          </Card>\n        )\n      }\n      // <Chat id={this.state.tx}></Chat>\n\n      return (\n        <div className='profile-container'>\n          <div className='personal-details-container'>\n              {profileBox()}\n          </div>\n          <div className='tx-details-holder'>\n            <div className={buyTable}>\n              {buyTable(buys)}\n            </div>\n            <div className={sellTable}>\n              {sellTable(sells)}\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  Profile.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(Profile);\n\n\n\n  // const cardHolder = (e, oper) => {\n  //   let a = ''\n  //   if (oper === 'buy') {\n  //     a = 'buy'\n  //   } else {\n  //     a = 'sell'\n  //   }\n  //   let id = e._id\n\n  //   return (\n  //     <div className='tx-card'>\n  //     <Card className='tx-card-style'>\n  //       <CardContent>\n  //         <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n  //           {a}\n  //         </Typography>\n  //         <Typography variant=\"h5\" component=\"h2\">\n  //           Seller: {e.seller.name}\n  //         </Typography>\n  //         <Typography className={classes.pos} color=\"textSecondary\">\n  //           Rating: ...\n  //         </Typography>\n  //         <Typography component=\"p\">\n  //           Amount: {e.amount}\n  //         </Typography>\n  //         <Typography component=\"p\">\n  //           Rate: {e.rate}\n  //         </Typography>\n  //         <Typography component=\"p\">\n  //           Bolivares: {e.bolivares}\n  //         </Typography>\n  //       </CardContent>\n  //       <CardActions>\n  //         {(e.classification !== \"OPEN\") ? <Button color=\"primary\" size=\"medium\"><Link className='link-style' to={\"/transactionChat/\" + id}> Chat </Link></Button> : null} // //\n  //         {(a === 'buy' && e.classification === 'IN PROCESS') ? <Button color=\"primary\" size=\"medium\"><Link className='link-style' to={\"/checkout/\" + id}> Pay </Link></Button> : null}//\n  //         {((a === 'sell' || a === 'buy') && e.classification === 'IN PROCESS') ? <Button color=\"primary\" size=\"medium\" onClick={(e) => this.cancelBuyOrder(this.props.userInSession._id, id)}>Cancel Order</Button> : null}\n  //         {(a === 'buy' && e.classification === 'PAID' ) ? <Button color=\"primary\" size=\"medium\">Waiting for confirmation</Button> : null} // \n  //         {(a === 'sell' && e.classification === 'PAID') ? <Button color=\"primary\" size=\"medium\" onClick={(e) => this.confirmPayment(id)}>Confirm Payment</Button> : null}\n  //         {((a === 'sell' || a === 'buy') && e.classification === 'CONFIRMED') ?  <Button color=\"primary\" size=\"medium\" onClick={(e) => this.ratePayment(e)}> Rate </Button> : null} \n  //       </CardActions>\n  //     </Card>\n  //     </div>\n  //   )\n  // }","import React, {Component} from 'react'\nimport UserService from '../UserService'\nimport classNames from 'classnames';\nimport PropTypes from \"prop-types\";\nimport {Link} from 'react-router-dom'\nimport { withStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport {Redirect} from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\n\n\n\n\nconst styles = theme => ({\n    textField: {\n        width: '92%',\n        flexBasis: 200, \n        margin: 10,\n    },\n    inputLabelShrink: {\n        shrink: true\n    }\n  });\n\n\nclass EditProfile extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            redirectToProfile: false,\n            user: {username: \"\",\n            password: \"\",\n            email: \"\",\n            country: \"\",\n            city: \"\",\n            street: \"\",\n            area_code: \"\"\n            }};\n        this.service = new UserService()\n    }\n\n    handleFormSubmit = (event) => {\n        let {...details} = this.state.user\n        event.preventDefault();\n\n        const id = this.props.userInSession._id\n        const username = details.username;\n        const name = details.name;\n        const email = details.email;\n        const country = details.country;\n        const city = details.city;\n        const street = details.street;\n        const area_code = details.area_code;\n    \n        this.service.editUser(id, {username, name, email, country, city, street, area_code})\n        .then( response => {\n            console.log(\"Patch?\", response)\n        })\n        .then( () => {\n            this.setState({redirectToProfile: true})\n        })\n        .catch( error => console.log(error) )\n    }\n\n      \n\n    getUser = id => {\n    this.service.getUser(id).then( user => {\n        let updateUser = {...this.state.user, ...user[0]};\n        this.setState({ user: updateUser});\n    });\n    };\n\n    componentDidMount = () => {\n    return this.getUser(this.props.userInSession._id);\n    };\n\n    handleChange = (event) => {\n    const {name, value} = event.target;\n    const _user = {...this.state.user};\n    _user[name] = value;\n    this.setState({user: _user})\n    }\n\n    \n\n\n    render() {\n\n        const { classes } = this.props\n        let {...details} = this.state.user\n        if (this.state.redirectToProfile) {\n            return (<Redirect to={'/profile'}/>)\n          }\n        \n        return (\n        <div>\n            <Paper className=\"transaction-holder\">\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={this.handleFormSubmit}>\n                <TextField\n                    id=\"outlined-simple-start-adornment\"\n                    className={classNames(classes.margin, classes.textField, classes.inputLabelShrink)}\n                    variant=\"outlined\"\n                    label=\"Username\" \n                    placeholder={details.username}\n                    name=\"username\"\n                    \n                    InputLabelProps={{\n                        shrink: true,\n                      }}\n                    InputProps={{\n                        readOnly: true,\n                    }}\n                />\n                <TextField\n                    id=\"outlined-simple-start-adornment\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    label=\"Name\" \n                    name=\"name\"\n                    placeholder={details.name}\n                    onChange = {(e) => this.handleChange(e)}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n\n                />\n                <TextField\n                    id=\"outlined-simple-start-adornment\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    label=\"Email\" \n                    name=\"email\"\n                    placeholder={details.email}\n                    onChange = {(e) => this.handleChange(e)}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <TextField\n                    id=\"outlined-simple-start-adornment\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    label=\"Country\" \n                    name=\"country\"\n                    placeholder={details.country}\n                    onChange = {(e) => this.handleChange(e)}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <TextField\n                    id=\"outlined-simple-start-adornment\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    label=\"City\" \n                    name=\"city\"\n                    placeholder={details.city}\n                    onChange = {(e) => this.handleChange(e)}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <TextField\n                    id=\"outlined-simple-start-adornment\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    label=\"Street\" \n                    name=\"street\"\n                    placeholder={details.street}\n                    onChange = {(e) => this.handleChange(e)}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <TextField\n                    id=\"outlined-simple-start-adornment\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    label=\"Area Code\" \n                    name=\"area_code\"\n                    type=\"number\"\n                    placeholder={details.area_code}\n                    onChange = {(e) => this.handleChange(e)}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n                <input type=\"submit\" value=\"Edit Profile\" />\n            </form>\n            </Paper>\n        </div>\n\n        )\n    }\n  }\n\nEditProfile.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\n\n export default withStyles(styles)(EditProfile);","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService'\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      username: \"\",\n      password: \"\",\n      email: \"\",\n      country: \"\",\n      city: \"\",\n      street: \"\",\n      area_code: \"\",\n      photo: null\n      }\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    const email = this.state.email;\n    const country = this.state.country;\n    const city = this.state.city;\n    const street = this.state.street;\n    const area_code = this.state.area_code;\n    const photo = this.state.photo;\n  \n    this.service.signup(username, password, email, country, city, street, area_code, photo)\n    .then( response => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n          email: \"\",\n          country: \"\",\n          city: \"\",\n          street: \"\",\n          area_code: \"\",\n          photo: \"\"\n        });\n        this.props.getUser(response.user)\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n\n    if (event.target.name === 'photo'){\n      const photo = event.target.files[0];\n      this.setState({\"photo\":photo})\n    } else {\n      this.setState({[name]: value});\n    }\n  }\n\n\n  render() {\n    return(\n      <div>\n        <h3>Welcome!, create your account next:</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          <fieldset>\n            <label>email:</label>\n            <input type=\"text\" name=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          <fieldset>\n            <label>Country:</label>\n            <input type=\"text\" name=\"country\" onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          <fieldset>\n            <label>City:</label>\n            <input type=\"text\" name=\"city\" onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          <fieldset>\n            <label>Street:</label>\n            <input type=\"text\" name=\"street\" onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          <fieldset>\n            <label>Area code:</label>\n            <input type=\"text\" name=\"area_code\" onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          <fieldset>\n              <label className=\"btn btn-primary\">\n                  <input type=\"file\" name='photo' className=\"\" placeholder='Product Photo' onChange={(e) => this.handleChange(e)} />\n              </label>\n          </fieldset>\n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n      </div>\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from './AuthService'\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      username: '', \n      password: '',\n      error: true,\n      redirectToHome: false,\n    };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  setRedirect = () =>{\n    this.setState({\n      redirectToHome: true\n    })\n  }\n\n  renderRedirect = () => {\n    if(this.state.redirectToHome) {\n      return <Redirect to='/'/>\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    console.log(this.state)\n  }\n\n  render() {\n        if (this.state.redirectHome){\n          this.renderRedirect()\n        }\n\n          return (<div>\n\n            \n              <Paper className='login-form-holder'>\n              <h3>Welcome back!</h3>\n                <form onSubmit={this.handleFormSubmit}>\n                {!this.state.error && this.renderRedirect()}\n                  <TextField className='input-holder' fullWidth type='text' label=\"Username\" name='username' onChange = {(e) => this.handleChange(e)}></TextField>\n                  <TextField className='input-holder' fullWidth type='password' label=\"Password\" name='password' onChange = {(e) => this.handleChange(e)}></TextField>\n                  <input type=\"submit\" value=\"Login\" class=\"login-button\" onClick={this.setRedirect} />\n                </form>\n              </Paper>\n            \n          </div>)\n          }\n  \n}\n\nexport default Login;","import { Link } from 'react-router-dom';\nimport TransactionService from '../TransactionService'\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport moment from 'moment'\n\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\n\nconst rows = [\n  { id: 'details', numeric: false, disablePadding: false, label: 'Details' },\n  { id: 'seller', numeric: false, disablePadding: false, label: 'Seller' },\n  { id: 'rating', numeric: false, disablePadding: false, label: 'Rating' },\n    { id: 'rate', numeric: true, disablePadding: false, label: 'Rate' },\n    { id: 'amount', numeric: true, disablePadding: false, label: 'Amount' },\n    { id: 'bolivares', numeric: true, disablePadding: false, label: 'Bolivares' },\n    { id: 'created', numeric: false, disablePadding: false, label: 'Created' },\n];\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { order, orderBy } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          {rows.map(row => {\n            return (\n              <TableCell\n                key={row.id}\n                numeric={row.numeric}\n                padding={row.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            );\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n});\n\nlet EnhancedTableToolbar = props => {\n  const { classes } = props;\n\n  return (\n    <Toolbar\n      className={classNames(classes.root)}\n    >\n      <div className={classes.title}>\n        \n          <Typography variant=\"h6\" id=\"tableTitle\">\n            Transactions\n          </Typography>\n        \n      </div>\n      <div className={classes.spacer} />\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nconst styles = theme => ({\n  root: {\n    marginTop: '5%',\n    marginLeft: '9%',\n    width: '80%',\n    padding: 20,\n  },\n  table: {\n    minWidth: 600,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\n\nclass Transactions extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      order: 'desc',\n      orderBy: 'rate',\n      selected: [],\n      data: [\n      ],\n      page: 0,\n      rowsPerPage: 10,\n    };\n    this.service = new TransactionService()\n  }\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'asc';\n\n    if (this.state.orderBy === property && this.state.order === 'asc') {\n      order = 'desc';\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n    componentDidMount() {\n        this.service.openTransactions().then((data) => {\n            if (data.error) {\n            } else {\n            this.setState({data: data})\n            }\n        })\n    }\n\n\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={this.handleSelectAllClick}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  if (n.classification === 'OPEN' && n.seller._id !== this.props.userInSession._id) {\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={n._id}\n                    >\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                      <Link to={\"/transaction/\" + n._id}> GO </Link>\n                      </TableCell>\n                      <TableCell numeric>{n.seller.username}</TableCell>\n                      <TableCell numeric>{n.seller.rating}</TableCell>\n                      <TableCell numeric>{n.amount}</TableCell>\n                      <TableCell numeric>{n.rate}</TableCell>\n                      <TableCell numeric>{n.bolivares}</TableCell>\n                      <TableCell>{moment(n.created_at).format('MM/DD/YYYY')}</TableCell>\n                    </TableRow>\n                  );\n                }\n                })}\n              \n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nTransactions.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Transactions);\n","import React, { Component } from \"react\";\nimport ComponentService from \"../TransactionService\";\nimport UserService from \"../UserService\";\nimport AuthService from \"../auth/AuthService\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Redirect} from 'react-router-dom';\nimport '../../stylesheets/style.scss';\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    width: '20%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n};\n\nclass TransactionDetails extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      redirectToProfile: false,\n      transaction: {}\n    };\n    this.match = props.match;\n    this.props = props;\n    this.service = new ComponentService();\n    this.AuthService = new AuthService();\n    this.UserService = new UserService();\n  }\n\n  getTransaction = transactionId => {\n    this.service.getTransaction(transactionId).then(data => {\n      this.setState({ transaction: data });\n    });\n  };\n\n  componentWillReceiveProps = props => {\n    \n    return this.getTransaction(props.match.params.transactionId);\n\n  };\n\n  componentDidMount = () => {\n    return this.getTransaction(this.match.params.transactionId);\n  };\n\n  changeStatusToInProcess = () => {\n    const id = this.state.transaction._id\n    const operations = this.state.transaction._id\n    const buyer = this.props.userInSession._id\n    const classification = \"IN PROCESS\"\n    this.service.editTransaction(id, {buyer, classification})\n    .then( () => {\n    this.UserService.addOperation(buyer, {operations})\n    })\n    .then( () => {\n      this.setState({redirectToProfile: true})\n    })\n    .catch( error => console.log(error) )\n  }\n\n\n  render() {\n\n    console.log(this.props)\n    const {classes} = this.props\n    if (this.state.transaction._id) {\n      const {...details} = this.state.transaction;\n    if (this.state.redirectToProfile) {\n      return (<Redirect to={'/profile'}/>)\n    }\n  \n      return (\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                Transaction Details\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                Seller: {details.seller.name}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                Rating: ...\n              </Typography>\n              <Typography component=\"p\">\n                Amount: {details.amount}\n              </Typography>\n              <Typography component=\"p\">\n                Rate: {details.rate}\n              </Typography>\n              <Typography component=\"p\">\n                Bolivares: {details.bolivares}\n              </Typography>\n              <Typography component=\"p\">\n                Classification: {details.classification}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button size=\"medium\" onClick={(e) => this.changeStatusToInProcess(e) }>Buy</Button>\n            </CardActions>\n          </Card>\n      );\n    } else return <div />;\n  }\n}\n\nTransactionDetails.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TransactionDetails);\n","import React, {Component} from 'react'\nimport ComponentService from '../TransactionService'\nimport classNames from 'classnames';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {Redirect} from 'react-router-dom'\nimport _ from 'lodash'\nimport Paper from '@material-ui/core/Paper'\nimport '../../stylesheets/style.scss';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\n\n\nconst styles = theme => ({\n\n    textField: {\n    width: '92%',\n      flexBasis: 200, \n      margin: 10,\n    },\n    inputLabelShrink: {\n        shrink: true\n    },\n    numberInput: {\n        width: '45%'\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    input: {\n        display: 'none',\n    }\n});\n    \n\n\nclass CreateTransaction extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            redirectToProfile: false,\n            deal: {\n            amount: 0,\n            rate: 0,\n            currency: 'EUR',\n            bolivares: 0,\n            beneficiaryName: \"\",\n            beneficiaryBank:\"\",\n            beneficiaryNationalId: \"\",\n            beneficiaryBankAccount: \"\",\n            }};\n        this.service = new ComponentService()\n    }\n\n    handleFormSubmit = (event) => {\n        console.log(\"event submit\")\n        \n        let {...details} = this.state.deal\n        event.preventDefault();\n        \n    \n        const seller = this.props.userInSession._id\n        const amount = parseInt(details.amount)\n        const rate = parseInt(details.rate)\n        const currency = details.currency\n        const bolivares = parseInt(details.bolivares)\n        const beneficiaryName = details.beneficiaryName\n        const beneficiaryBank = parseInt(details.beneficiaryBank)\n        const beneficiaryNationalId = parseInt(details.beneficiaryNationalId)\n        const beneficiaryBankAccount = parseInt(details.beneficiaryBankAccount)\n \n    \n        this.service.createTransaction(\n            seller, \n            amount,\n            rate,\n            currency,\n            bolivares,\n            beneficiaryName,\n            beneficiaryBank,\n            beneficiaryNationalId,\n            beneficiaryBankAccount\n            )\n        .then( response => {\n            console.log(\"Create\", response)\n        })\n        .then( () => {\n            this.setState({redirectToProfile: true})\n        })\n        .catch( error => console.log(error) )\n    }\n\n    capitalizeFirstLetter = (string) => {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    // handleChange = (event) => {\n    //     const {name, value} = event.target;\n    //     const _deal = {...this.state.deal};\n    //     _deal[name] = value;\n    //     this.setState({deal: _deal})\n    // }\n\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        const _deal = {...this.state.deal};\n        _deal[name] = value;\n        this.setState({deal:  _deal}, () => {\n          if(this.state.deal.amount && this.state.deal.rate){\n            this.calcTotal();\n          }\n        });\n      }\n\n    calcTotal(){\n    const bolivares = this.state.deal.amount * this.state.deal.rate\n    console.log(bolivares)\n    const _deal = {...this.state.deal};\n    _deal.bolivares = bolivares;\n    this.setState({deal: _deal})\n    }\n\n    handleCurrencyChange = name => event => {\n        console.log(event.target.value,);\n        \n        this.setState({\n          [name]: event.target.value,\n          \n        });\n      };\n\n    currencies = [\n        {\n          value: 'USD',\n          label: '$',\n        },\n        {\n          value: 'EUR',\n          label: '€',\n        }\n    ]\n\n    render() {\n\n        const { classes } = this.props\n        if (this.state.redirectToProfile) {\n            return (<Redirect to={'/profile'}/>)\n          }\n\n        return (\n        <Paper className=\"transaction-holder\">\n            <h1>Enter transactions details:</h1>\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={this.handleFormSubmit}>\n                {_.map(this.state.deal, (val, key) => { \n                    if (key === 'amount' || key === 'rate' || key === 'bolivares' || key === 'currency') {\n                        return <TextField\n                        key={key}\n                        className={classNames(classes.margin, classes.textField, classes.numberInput)}\n                        variant=\"outlined\"\n                        label={(this.capitalizeFirstLetter(key)).replace( /([A-Z])/g, \" $1\" )}\n                        name={key}\n                        placeholder={val}\n                        onChange = {(e) => this.handleChange(e)}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        />\n                    } else {\n                        return <TextField\n                        key={key}\n                        className={classNames(classes.margin, classes.textField)}\n                        variant=\"outlined\"\n                        label={(this.capitalizeFirstLetter(key)).replace( /([A-Z])/g, \" $1\" )}\n                        name={key}\n                        placeholder={val}\n                        onChange = {(e) => this.handleChange(e)}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        />\n\n                    }\n                 })}\n                <Button type='submit' variant=\"outlined\" className={classes.button}>\n                    Send Money\n                </Button>\n            </form>\n        </Paper>\n\n        )\n    }\n  }\n\nCreateTransaction.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\n\n export default withStyles(styles)(CreateTransaction);","import React, {Component} from 'react';\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport AuthService from '../auth/AuthService.js'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport ComponentService from \"../TransactionService\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport '../../stylesheets/style.scss'\n\n\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    width: '20%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n};\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);  \n    this.state = {\n      complete: false,\n      transaction: {},\n    };\n    this.submit = this.submit.bind(this);\n    this.service = new AuthService()\n    this.txservice = new ComponentService();\n  }\n\n  getTransaction = transactionId => {\n    this.txservice.getTransaction(transactionId).then(data => {\n      this.setState({ transaction: data });\n    });\n  };\n\n  componentDidMount = () => {\n    return this.getTransaction(this.props.txId);\n  };\n\n  changeStatusToInPaid = () => {\n    const id = this.state.transaction._id\n    const classification = \"PAID\"\n    this.txservice.payTransaction(id, {classification})\n    .then( () => {\n      this.setState({redirectToProfile: true})\n    })\n    .catch( error => console.log(error) )\n  }\n\n  async submit(ev) {\n    let {token} = await this.props.stripe.createToken({name: \"Name\"});\n    let response = await this.service.payment(token)\n    .then( response => {\n      if (response.ok) {\n        this.setState({complete: true})\n      }\n    })\n    .then( () => {\n      if (this.state.complete) {\n        this.changeStatusToInPaid()\n      }\n    })\n    .catch(e => console.log(e))\n  }\n  \n  \n  render() {\n\n\n\n    const {classes} = this.props\n    \n\n\n\n    if (this.state.complete) {\n        \n        return <h1>Purchase Complete</h1>\n\n\n    } else if (this.state.transaction._id) {\n      \n      const {...details} = this.state.transaction;\n      \n      return (\n        \n        <Paper className=\"checkout\">\n        \n            <div className='paymentHolder'>\n              <h1>Checkout</h1>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                Transaction Details\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                Seller: {details.seller.name}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                Rating: {details.rating}\n              </Typography>\n              <Typography component=\"p\">\n                Amount: {details.amount}\n              </Typography>\n              <Typography component=\"p\">\n                Rate: {details.rate}\n              </Typography>\n              <Typography component=\"p\">\n                Bolivares: {details.bolivares}\n              </Typography>\n              </div>\n            <div className='paymentHolder'>\n              <Typography variant=\"h6\" gutterBottom>\n              Please enter your payment details\n              </Typography>\n              <Grid container spacing={24}>\n                <Grid item xs={12} md={6}>\n                  <TextField required id=\"cardName\" label=\"Name on card\" fullWidth />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField required id=\"billingAdress\" label=\"Billing Address\" fullWidth />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <CardElement fullWidth/>\n                </Grid>\n                <Grid item xs={12}>\n                </Grid>\n              </Grid>\n            <button onClick={this.submit}>Complete payment</button>\n            </div>\n          \n        </Paper>\n        \n      );\n    } else {\n      return ''\n    }\n  }\n}\n\n\nexport default injectStripe(withStyles(styles)(CheckoutForm));","import React, {Component} from 'react';\nimport {Elements, StripeProvider} from 'react-stripe-elements';\nimport CheckoutForm from './CheckoutForm';\n\nclass Checkout extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      txId: this.props.match.params.transactionId\n    }\n  }\n  \n\n  render() {\n    return (\n      <StripeProvider apiKey=\"pk_test_TkH6C0gc5rbqXpV8KrqnM68E\">\n        <div className=\"example\">\n          <Elements>\n            <CheckoutForm txId={this.state.txId}/>\n          </Elements>\n        </div>\n      </StripeProvider>\n    );\n  }\n}\n\nexport default Checkout;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\n\n// import ProjectList from './components/projects/ProjectList';\nimport Navbar from './components/main/Navbar';\nimport Home from './components/main/Home';\nimport Profile from './components/main/Profile';\nimport EditProfile from './components/main/EditProfile';\n// import ProjectDetails from './components/projects/ProjectDetails';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport AuthService from './components/auth/AuthService';\nimport Transactions from './components/transactions/Transactions';\nimport TransactionDetails from './components/transactions/TransactionDetails';\nimport CreateTransaction from './components/transactions/CreateTransaction';\nimport Checkout from './components/transactions/Checkout';\nimport {Chat} from './components/transactions/Chat';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = { \n      loggedInUser: null,\n     };\n    this.service = new AuthService();\n  \n  }\n\n  getTheUser = (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n  logout = () => {\n    this.service.logout()\n    .then(() => {\n      this.setState({ loggedInUser: null });\n    })\n  }\n\n  fetchUser(){\n    if( this.state.loggedInUser === null ){\n      this.service.loggedin()\n      .then(response =>{\n        this.setState({\n          loggedInUser:  response\n        }) \n      })\n      .catch( err =>{\n        this.setState({\n          loggedInUser:  false\n        }) \n      })\n    }\n  }\n\n  \n\n  render() {\n    this.fetchUser()\n\n    if(this.state.loggedInUser){\n      return (\n        <div className=\"App\">\n          <header>\n            <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n            <Route exact path='/' logout={this.logout} render={() => <Home userInSession={this.state.loggedInUser}/>} />\n            <Route exact path='/Profile' logout={this.logout} render={() => <Profile userInSession={this.state.loggedInUser}/>} />\n            <Route exact path='/user/edit' logout={this.logout} render={() => <EditProfile userInSession={this.state.loggedInUser}/>} />\n            <Route exact path='/transactions' render={() => <Transactions userInSession={this.state.loggedInUser}/>}/>\n            <Route exact path='/sendmoney' render={() => <CreateTransaction userInSession={this.state.loggedInUser}/>}/>\n            <Route path=\"/transaction/:transactionId\" component={({match}) => <TransactionDetails match={match} userInSession={this.state.loggedInUser}/>} />\n            <Route path=\"/checkout/:transactionId\" component={({match}) => <Checkout match={match} userInSession={this.state.loggedInUser}/>} />\n            <Route path=\"/transactionChat/:transactionId\" component={({match}) => <Chat match={match} userInSession={this.state.loggedInUser}/>} />\n          </header>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <header >\n            <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n            <Switch>\n              <Route exact path='/signup' render={() => <Signup getUser={this.getTheUser}/>}/>\n              <Route exact path='/login' render={() => <Login getUser={this.getTheUser}/>}/>\n            </Switch>\n          </header>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n            <Router>\n                    <App />\n            </Router>, document.getElementById('root')\n        );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}